services:
  db:
    image: postgres:latest
    restart: on-failure
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - webnet
    ports:
      - "5432:5432"

  backend:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: "./init.sh"
    networks:
      - webnet
    depends_on: # must be started after:
      - db
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
    ports:
      - "8000:8000"
    volumes:
      - media_volume:/app/media
      - static_volume:/app/static

  celery:
    restart: on-failure
    build:
      context: .
    env_file:
      - .env
    command: [ "celery", "-A", "core", "worker", "--loglevel=info", "-Q", "default" ]
    depends_on:
      - backend
      - rabbitmq
    networks:
      - webnet

  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    ports:
      # AMQP used by Celery
      - "5672:5672"
      # UI Web 
      - "15672:15672"
    networks:
      - webnet

  flower:
    restart: on-failure
    build:
      context: .
    command: bash -c "pip install flower && celery -A core flower --port=5555 --broker=amqp://guest:guest@rabbitmq:5672//"
    ports:
      - "5555:5555"
    depends_on:
      - celery
      - rabbitmq
    networks:
      - webnet
    environment:
      - FLOWER_BASIC_AUTH=admin:admin
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - DJANGO_SETTINGS_MODULE=core.settings
      - FLOWER_BROKER_API=http://guest:guest@rabbitmq:15672/api/


  migrate:
    restart: no
    build:
      context: .
    command: python manage.py migrate
    depends_on:
      - db
    networks:
      - webnet

volumes:
  media_volume:
  static_volume:
  db_data:

networks:
  webnet:
    driver: bridge
